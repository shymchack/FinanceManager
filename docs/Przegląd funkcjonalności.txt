FinanceManager.API/GetTotalSummary
FinanceManager.API/Get
FinanceManager.API/GetDetails

PrzeglÄ…d funkcjonalnoÅ›ci:

- Zestawienie wydatkÃ³w i stanu finansowego w wybranym period unit  (domyÅ›lnie current)
	- filtry, grupowanie po kategorii
	- moÅ¼liwoÅ›Ä‡ przejÅ›cia do innego period unit z zachowaniem zaznaczenia
	- podziaÅ‚ na wydatki rÃ³Å¼nych kategorii
		- cykliczne permanentne
		- cykliczne z datÄ… waÅ¼noÅ›ci
		- cykliczne "nierzeczywiste" (np. oszczÄ™dnoÅ›ci na konkretny cel, poduszka finansowa)
		- jednorazowe
		- jednorazowe "nierzeczywiste" (jw.)
		- przyszÅ‚e (zarÃ³wno cykliczne, jak i jednorazowe)
		- przeszÅ‚e (zakoÅ„czone - jw.)
		- wydatek reprezentujÄ…cy wyrÃ³wnanie miÄ™dzy obecnym stanem konta wprowadzonym z palca (zapisywaÄ‡ to gdzies? czy jako wydatek wprowadzaÄ‡ i spÅ‚atÄ™ oraz nadpisywaÄ‡ kwotÄ™ poczÄ…tkowÄ… na koncie), a tym, ktÃ³ry wynika z danych w bazie
- SzczegÃ³Å‚y konkretnego wydatku w wybranym period unit (domyÅ›lnie current)
	- moÅ¼liwoÅ›Ä‡ przejÅ›cia do innego miesiÄ…ca z zachowaniem zaznaczeÅ„
	
- dodanie nowego wydatku
- aktualizacja wydatku
	- zmiana nazwy
	- zmiana kwoty poczÄ…tkowej
		- zmiana wpÅ‚ywajÄ…ca na caÅ‚y okres waÅ¼noÅ›ci wydatku
		- zmiana wpÅ‚ywajÄ…ca na okres od wybranej daty do koÅ„ca wydatku
			2 opcje:
			- wykorzystujÄ…c wprowadzenie odpowiedniej money operation z wÅ‚aÅ›ciwÄ… datÄ… (chyba potrzebna flaga, Å¼eby m.in. nie wyÅ›wietlaÄ‡ tego w operacjach)
			- dodajÄ…c nowy wydatek (pomyÅ›leÄ‡ czy to samo czy inne ID) podmieniajÄ…c uzupeÅ‚niajÄ…ce siÄ™ daty obowiÄ…zywania
	- zmiana okresu waÅ¼noÅ›ci wydatku
		- zmiana wpÅ‚ywajÄ…ca na caÅ‚y okres waÅ¼noÅ›ci wydatku
		- zmiana wpÅ‚ywajÄ…ca tylko na rÃ³Å¼nicÄ™ miÄ™dzy nowym a starym okresem obowiÄ…zywania
			- od teraz do nowego koÅ„ca 
			- od nowego poczÄ…tku do nowego koÅ„ca
- "spÅ‚ata" wydatku (moÅ¼liwe kwoty ujemne i dodatnie oraz dziaÅ‚ania w przeszÅ‚oÅ›ci)
- aktualizacja poczÄ…tkowego stanu konta


API:
- GetPeriodSummary(int userId) - domyÅ›lna data UtcNow.
- GetPeriodSummaryByDate(int userId, DateTime dateTime)
- GetMoneyOperationSchedule(int moneyOperationId)
- GetMoneyOperationSchedule(int moneyOperationId, DateTime dateTime)
- CreateMoneyOperation(CreateMoneyOperationRequestData data)
	- data: { string name, string description, decimal initialAmount,  int accountId, bool isReal, bool isActive, DateTime validityBeginDate, DateTime validityEndDate, short repetitionUnitQuantity, PeriodUniti repetitionUnit, MoneyOperationSetting moneyOperationSettingData}
- CreateMoneyOperationChange
	
